apiVersion: apps/v1
kind: Deployment
metadata:
  name:  redis
  namespace: default
  labels:
    app:  redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app:  redis
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  redis
        image:  redis:alpine
        resources:
          requests:
            cpu: 10m
            memory: 50Mi
        ports:
        - containerPort:  6379
          name:  redis
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
        - name: redis-data
          emptyDir: {} 
          # hostPath:
          #   path: /run/desktop/mnt/host/c/redis/data
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: default
spec:
  selector:
    app: redis
  type: ClusterIP
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: "redis-service"
    protocol: TCP
    port: 6379
    targetPort: 6379
    # If you set the `spec.type` field to `NodePort` and you want a specific port number,
    # you can specify a value in the `spec.ports[*].nodePort` field.
    # nodePort: 30051    