name: Deploy images from ECR to k8s
on:
  workflow_dispatch
env:
  AWS_REGION: "us-east-1"
  ENV: "prod"
permissions:
  id-token: write
  contents: read
jobs:
  deployment:
    name: Deploy application to EKS cluster
    runs-on: ubuntu-latest
    steps:
    - name: Generate the GitHub OIDC token
      run: |
        TOKEN=$(curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=api://sts.amazonaws.com" | jq -r '.value')   
        echo $TOKEN

    - name: Checkout code from GitHub to runner
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::376117310197:role/oidc_identity
        role-duration-seconds: 1200
        aws-region: ${{ env.AWS_REGION }}

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
        # with:
        #   version: '1.27' # default is latest stable

    - name: Get the GitHub OIDC token, Assume the role with web identity and Use the temporary credentials to make API calls
      run: |

        aws sts assume-role-with-web-identity \
        --role-arn arn:aws:iam::376117310197:role/oidc_identity \
        --role-session-name GitHubActions \
        --web-identity-token $TOKEN \
        --provider-id www.amazon.com

        export AWS_ACCESS_KEY_ID=$(jq -r '.Credentials.AccessKeyId' <<< "$TEMP_ROLE")
        export AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials.SecretAccessKey' <<< "$TEMP_ROLE")
        export AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' <<< "$TEMP_ROLE")

        echo $TEMP_ROLE

