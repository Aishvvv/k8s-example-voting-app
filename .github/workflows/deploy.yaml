name: Deploy images from ECR to k8s
on:
  workflow_dispatch
env:
  AWS_REGION: "us-east-1"
  ENV: "prod"
permissions:
  id-token: write
  contents: read
jobs:
  deployment:
    name: Deploy application to EKS cluster
    runs-on: ubuntu-latest
    steps:
    - name: Generate the GitHub OIDC token
      uses: actions/github-script@v6
      id: script
      timeout-minutes: 10
      with:
        debug: true
        script: |
          const token = process.env['ACTIONS_RUNTIME_TOKEN']
          const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL']
          core.setOutput('TOKEN', token.trim())
          core.setOutput('IDTOKENURL', runtimeUrl.trim())

    - name: Publich OIDC token
      run: |
        IDTOKEN=$(curl -H "Authorization: bearer  ${{steps.script.outputs.TOKEN}}" ${{steps.script.outputs.IDTOKENURL}}  -H "Accept: application/json; api-version=2.0" -H "Content-Type: application/json" -d "{}" | jq -r '.value')
        echo $IDTOKEN
        jwtd() {
            if [[ -x $(command -v jq) ]]; then
                jq -R 'split(".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
                echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
                TOKEN1=$(echo "${1}" | awk -F'.' '{print $3}')
            fi
        }
        jwtd $IDTOKEN
        echo "idToken=${IDTOKEN}" >> $GITHUB_OUTPUT
      id: tokenid       

    - name: Checkout code from GitHub to runner
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::376117310197:role/oidc_identity
        role-duration-seconds: 1200
        aws-region: ${{ env.AWS_REGION }}

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
        # with:
        #   version: '1.27' # default is latest stable

    - name: Get the GitHub OIDC token, Assume the role with web identity and Use the temporary credentials to make API calls
      run: |

        aws sts assume-role-with-web-identity \
        --role-arn arn:aws:iam::376117310197:role/oidc_identity \
        --role-session-name GitHubActions \
        --web-identity-token $TOKEN1 \
        --provider-id www.amazon.com

        export AWS_ACCESS_KEY_ID=$(jq -r '.Credentials.AccessKeyId' <<< "$TEMP_ROLE")
        export AWS_SECRET_ACCESS_KEY=$(jq -r '.Credentials.SecretAccessKey' <<< "$TEMP_ROLE")
        export AWS_SESSION_TOKEN=$(jq -r '.Credentials.SessionToken' <<< "$TEMP_ROLE")

        echo $TEMP_ROLE

